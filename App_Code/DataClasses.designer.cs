#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="eSupervisor")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InserttblAllocation(tblAllocation instance);
  partial void UpdatetblAllocation(tblAllocation instance);
  partial void DeletetblAllocation(tblAllocation instance);
  partial void InserttblStudent(tblStudent instance);
  partial void UpdatetblStudent(tblStudent instance);
  partial void DeletetblStudent(tblStudent instance);
  partial void InserttblBlogPost(tblBlogPost instance);
  partial void UpdatetblBlogPost(tblBlogPost instance);
  partial void DeletetblBlogPost(tblBlogPost instance);
  partial void InserttblDocumentComment(tblDocumentComment instance);
  partial void UpdatetblDocumentComment(tblDocumentComment instance);
  partial void DeletetblDocumentComment(tblDocumentComment instance);
  partial void InserttblDocument(tblDocument instance);
  partial void UpdatetblDocument(tblDocument instance);
  partial void DeletetblDocument(tblDocument instance);
  partial void InserttblMeetingMember(tblMeetingMember instance);
  partial void UpdatetblMeetingMember(tblMeetingMember instance);
  partial void DeletetblMeetingMember(tblMeetingMember instance);
  partial void InserttblMeeting(tblMeeting instance);
  partial void UpdatetblMeeting(tblMeeting instance);
  partial void DeletetblMeeting(tblMeeting instance);
  partial void InserttblPersonalMessage(tblPersonalMessage instance);
  partial void UpdatetblPersonalMessage(tblPersonalMessage instance);
  partial void DeletetblPersonalMessage(tblPersonalMessage instance);
  partial void InserttblStaff(tblStaff instance);
  partial void UpdatetblStaff(tblStaff instance);
  partial void DeletetblStaff(tblStaff instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["eSupervisorConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tblAllocation> tblAllocations
	{
		get
		{
			return this.GetTable<tblAllocation>();
		}
	}
	
	public System.Data.Linq.Table<tblStudent> tblStudents
	{
		get
		{
			return this.GetTable<tblStudent>();
		}
	}
	
	public System.Data.Linq.Table<tblBlogPost> tblBlogPosts
	{
		get
		{
			return this.GetTable<tblBlogPost>();
		}
	}
	
	public System.Data.Linq.Table<tblDocumentComment> tblDocumentComments
	{
		get
		{
			return this.GetTable<tblDocumentComment>();
		}
	}
	
	public System.Data.Linq.Table<tblDocument> tblDocuments
	{
		get
		{
			return this.GetTable<tblDocument>();
		}
	}
	
	public System.Data.Linq.Table<tblLogFolder> tblLogFolders
	{
		get
		{
			return this.GetTable<tblLogFolder>();
		}
	}
	
	public System.Data.Linq.Table<tblMeetingMember> tblMeetingMembers
	{
		get
		{
			return this.GetTable<tblMeetingMember>();
		}
	}
	
	public System.Data.Linq.Table<tblMeeting> tblMeetings
	{
		get
		{
			return this.GetTable<tblMeeting>();
		}
	}
	
	public System.Data.Linq.Table<tblPersonalMessage> tblPersonalMessages
	{
		get
		{
			return this.GetTable<tblPersonalMessage>();
		}
	}
	
	public System.Data.Linq.Table<tblStaff> tblStaffs
	{
		get
		{
			return this.GetTable<tblStaff>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.commentStudentUpload")]
	public int commentStudentUpload([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> docID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string staffID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(500)")] string commentInfo)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), docID, staffID, commentInfo);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uploadNewDocument")]
	public int uploadNewDocument([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(22)")] string uploader, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string link)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uploader, title, link);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getAllocationsByStaff")]
	public ISingleResult<getAllocationsByStaffResult> getAllocationsByStaff([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eventID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventID);
		return ((ISingleResult<getAllocationsByStaffResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getDocLinkByID")]
	public ISingleResult<getDocLinkByIDResult> getDocLinkByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
		return ((ISingleResult<getDocLinkByIDResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStaffNameByID")]
	public ISingleResult<getStaffNameByIDResult> getStaffNameByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="VarChar(20)")] string iD)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
		return ((ISingleResult<getStaffNameByIDResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStaffsByPK")]
	public ISingleResult<getStaffsByPKResult> getStaffsByPK([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="VarChar(20)")] string iD)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
		return ((ISingleResult<getStaffsByPKResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStaffsLikeName")]
	public ISingleResult<getStaffsLikeNameResult> getStaffsLikeName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(150)")] string name)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
		return ((ISingleResult<getStaffsLikeNameResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStudensByLike")]
	public ISingleResult<getStudensByLikeResult> getStudensByLike([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string studentName)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentName);
		return ((ISingleResult<getStudensByLikeResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStudensByPK")]
	public ISingleResult<getStudensByPKResult> getStudensByPK([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string studentID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID);
		return ((ISingleResult<getStudensByPKResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStudensByStaff")]
	public ISingleResult<getStudensByStaffResult> getStudensByStaff([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string staffId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), staffId);
		return ((ISingleResult<getStudensByStaffResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStudensByStatus")]
	public ISingleResult<getStudensByStatusResult> getStudensByStatus([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentStatus)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentStatus);
		return ((ISingleResult<getStudensByStatusResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStudentNameByID")]
	public ISingleResult<getStudentNameByIDResult> getStudentNameByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="VarChar(20)")] string iD)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
		return ((ISingleResult<getStudentNameByIDResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStudentsUploads")]
	public ISingleResult<getStudentsUploadsResult> getStudentsUploads([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string staffID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string studentName)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), staffID, studentName);
		return ((ISingleResult<getStudentsUploadsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getTop5ActiveStaffs")]
	public ISingleResult<getTop5ActiveStaffsResult> getTop5ActiveStaffs()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<getTop5ActiveStaffsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getTotalBlogPost")]
	public ISingleResult<getTotalBlogPostResult> getTotalBlogPost([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="VarChar(20)")] string iD)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
		return ((ISingleResult<getTotalBlogPostResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getTotalMadeAllocations")]
	public ISingleResult<getTotalMadeAllocationsResult> getTotalMadeAllocations([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="VarChar(20)")] string iD)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
		return ((ISingleResult<getTotalMadeAllocationsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getUserUploads")]
	public ISingleResult<getUserUploadsResult> getUserUploads([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string uploader, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string topic)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uploader, topic);
		return ((ISingleResult<getUserUploadsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertStaff")]
	public int InsertStaff([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string staffID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string staffName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string staffPass, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string staffMailAddr, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string staffAvatar, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> staffBirth, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string staffAddr, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string staffPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> staffType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> staffStatus)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), staffID, staffName, staffPass, staffMailAddr, staffAvatar, staffBirth, staffAddr, staffPhone, staffType, staffStatus);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InserttblStudents")]
	public int InserttblStudents([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string studentName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string studentPass, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string studentMailAddr, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string studentAcademicYear, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string studentAvatar, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> studentBirth, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string studentAddr, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string studentPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string studentSupervisorID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string studentSecondMarkerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> studentLastLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentStatus)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID, studentName, studentPass, studentMailAddr, studentAcademicYear, studentAvatar, studentBirth, studentAddr, studentPhone, studentSupervisorID, studentSecondMarkerID, studentLastLogin, studentStatus);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.removeUserUpload")]
	public int removeUserUpload([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> docID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), docID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.reportTotalAllocations")]
	public ISingleResult<reportTotalAllocationsResult> reportTotalAllocations()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<reportTotalAllocationsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.reportTotalInactiveStudents")]
	public ISingleResult<reportTotalInactiveStudentsResult> reportTotalInactiveStudents()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<reportTotalInactiveStudentsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.reportTotalNotAllocated")]
	public ISingleResult<reportTotalNotAllocatedResult> reportTotalNotAllocated()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<reportTotalNotAllocatedResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.reportTotalUser")]
	public ISingleResult<reportTotalUserResult> reportTotalUser()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<reportTotalUserResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateLastLoginStudens")]
	public int updateLastLoginStudens([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> studentLastLogin)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID, studentLastLogin);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateStaff")]
	public int updateStaff([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string staffID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string staffName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string staffPass, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string staffMailAddr, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string staffAvatar, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> staffBirth, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string staffAddr, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string staffPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> staffType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> staffStatus)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), staffID, staffName, staffPass, staffMailAddr, staffAvatar, staffBirth, staffAddr, staffPhone, staffType, staffStatus);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateStaffsPass")]
	public int updateStaffsPass([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string staffID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string staffPass)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), staffID, staffPass);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateStaffsStatus")]
	public int updateStaffsStatus([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string staffID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> staffStatus)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), staffID, staffStatus);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateUserUpload")]
	public int updateUserUpload([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> docID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string link)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), docID, title, link);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStaffsUploads")]
	public ISingleResult<getStaffsUploadsResult> getStaffsUploads([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StuID", DbType="VarChar(20)")] string stuID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StaffName", DbType="VarChar(150)")] string staffName)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stuID, staffName);
		return ((ISingleResult<getStaffsUploadsResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAllocations")]
public partial class tblAllocation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _eventID;
	
	private string _eventCreatorID;
	
	private string _eventAffectedStaffID;
	
	private string _eventAffectedStudentID;
	
	private string _eventType;
	
	private System.DateTime _eventDate;
	
	private string _eventInfo;
	
	private int _eventStatus;
	
	private EntityRef<tblStudent> _tblStudent;
	
	private EntityRef<tblStaff> _tblStaff;
	
	private EntityRef<tblStaff> _tblStaff1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OneventIDChanging(int value);
    partial void OneventIDChanged();
    partial void OneventCreatorIDChanging(string value);
    partial void OneventCreatorIDChanged();
    partial void OneventAffectedStaffIDChanging(string value);
    partial void OneventAffectedStaffIDChanged();
    partial void OneventAffectedStudentIDChanging(string value);
    partial void OneventAffectedStudentIDChanged();
    partial void OneventTypeChanging(string value);
    partial void OneventTypeChanged();
    partial void OneventDateChanging(System.DateTime value);
    partial void OneventDateChanged();
    partial void OneventInfoChanging(string value);
    partial void OneventInfoChanged();
    partial void OneventStatusChanging(int value);
    partial void OneventStatusChanged();
    #endregion
	
	public tblAllocation()
	{
		this._tblStudent = default(EntityRef<tblStudent>);
		this._tblStaff = default(EntityRef<tblStaff>);
		this._tblStaff1 = default(EntityRef<tblStaff>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int eventID
	{
		get
		{
			return this._eventID;
		}
		set
		{
			if ((this._eventID != value))
			{
				this.OneventIDChanging(value);
				this.SendPropertyChanging();
				this._eventID = value;
				this.SendPropertyChanged("eventID");
				this.OneventIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventCreatorID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string eventCreatorID
	{
		get
		{
			return this._eventCreatorID;
		}
		set
		{
			if ((this._eventCreatorID != value))
			{
				if (this._tblStaff1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OneventCreatorIDChanging(value);
				this.SendPropertyChanging();
				this._eventCreatorID = value;
				this.SendPropertyChanged("eventCreatorID");
				this.OneventCreatorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventAffectedStaffID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string eventAffectedStaffID
	{
		get
		{
			return this._eventAffectedStaffID;
		}
		set
		{
			if ((this._eventAffectedStaffID != value))
			{
				if (this._tblStaff.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OneventAffectedStaffIDChanging(value);
				this.SendPropertyChanging();
				this._eventAffectedStaffID = value;
				this.SendPropertyChanged("eventAffectedStaffID");
				this.OneventAffectedStaffIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventAffectedStudentID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string eventAffectedStudentID
	{
		get
		{
			return this._eventAffectedStudentID;
		}
		set
		{
			if ((this._eventAffectedStudentID != value))
			{
				if (this._tblStudent.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OneventAffectedStudentIDChanging(value);
				this.SendPropertyChanging();
				this._eventAffectedStudentID = value;
				this.SendPropertyChanged("eventAffectedStudentID");
				this.OneventAffectedStudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string eventType
	{
		get
		{
			return this._eventType;
		}
		set
		{
			if ((this._eventType != value))
			{
				this.OneventTypeChanging(value);
				this.SendPropertyChanging();
				this._eventType = value;
				this.SendPropertyChanged("eventType");
				this.OneventTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventDate", DbType="DateTime NOT NULL")]
	public System.DateTime eventDate
	{
		get
		{
			return this._eventDate;
		}
		set
		{
			if ((this._eventDate != value))
			{
				this.OneventDateChanging(value);
				this.SendPropertyChanging();
				this._eventDate = value;
				this.SendPropertyChanged("eventDate");
				this.OneventDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventInfo", DbType="VarChar(100)")]
	public string eventInfo
	{
		get
		{
			return this._eventInfo;
		}
		set
		{
			if ((this._eventInfo != value))
			{
				this.OneventInfoChanging(value);
				this.SendPropertyChanging();
				this._eventInfo = value;
				this.SendPropertyChanged("eventInfo");
				this.OneventInfoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventStatus", DbType="Int NOT NULL")]
	public int eventStatus
	{
		get
		{
			return this._eventStatus;
		}
		set
		{
			if ((this._eventStatus != value))
			{
				this.OneventStatusChanging(value);
				this.SendPropertyChanging();
				this._eventStatus = value;
				this.SendPropertyChanged("eventStatus");
				this.OneventStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblAllocation", Storage="_tblStudent", ThisKey="eventAffectedStudentID", OtherKey="studentID", IsForeignKey=true)]
	public tblStudent tblStudent
	{
		get
		{
			return this._tblStudent.Entity;
		}
		set
		{
			tblStudent previousValue = this._tblStudent.Entity;
			if (((previousValue != value) 
						|| (this._tblStudent.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblStudent.Entity = null;
					previousValue.tblAllocations.Remove(this);
				}
				this._tblStudent.Entity = value;
				if ((value != null))
				{
					value.tblAllocations.Add(this);
					this._eventAffectedStudentID = value.studentID;
				}
				else
				{
					this._eventAffectedStudentID = default(string);
				}
				this.SendPropertyChanged("tblStudent");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblAllocation", Storage="_tblStaff", ThisKey="eventAffectedStaffID", OtherKey="staffID", IsForeignKey=true)]
	public tblStaff tblStaff
	{
		get
		{
			return this._tblStaff.Entity;
		}
		set
		{
			tblStaff previousValue = this._tblStaff.Entity;
			if (((previousValue != value) 
						|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblStaff.Entity = null;
					previousValue.tblAllocations.Remove(this);
				}
				this._tblStaff.Entity = value;
				if ((value != null))
				{
					value.tblAllocations.Add(this);
					this._eventAffectedStaffID = value.staffID;
				}
				else
				{
					this._eventAffectedStaffID = default(string);
				}
				this.SendPropertyChanged("tblStaff");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblAllocation1", Storage="_tblStaff1", ThisKey="eventCreatorID", OtherKey="staffID", IsForeignKey=true)]
	public tblStaff tblStaff1
	{
		get
		{
			return this._tblStaff1.Entity;
		}
		set
		{
			tblStaff previousValue = this._tblStaff1.Entity;
			if (((previousValue != value) 
						|| (this._tblStaff1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblStaff1.Entity = null;
					previousValue.tblAllocations1.Remove(this);
				}
				this._tblStaff1.Entity = value;
				if ((value != null))
				{
					value.tblAllocations1.Add(this);
					this._eventCreatorID = value.staffID;
				}
				else
				{
					this._eventCreatorID = default(string);
				}
				this.SendPropertyChanged("tblStaff1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStudents")]
public partial class tblStudent : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _studentID;
	
	private string _studentName;
	
	private string _studentPass;
	
	private string _studentMailAddr;
	
	private string _studentAcademicYear;
	
	private string _studentAvatar;
	
	private System.Nullable<System.DateTime> _studentBirth;
	
	private string _studentAddr;
	
	private string _studentPhone;
	
	private string _studentSupervisorID;
	
	private string _studentSecondMarkerID;
	
	private System.Nullable<System.DateTime> _studentLastLogin;
	
	private int _studentStatus;
	
	private EntitySet<tblAllocation> _tblAllocations;
	
	private EntitySet<tblMeetingMember> _tblMeetingMembers;
	
	private EntitySet<tblPersonalMessage> _tblPersonalMessages;
	
	private EntityRef<tblStaff> _tblStaff;
	
	private EntityRef<tblStaff> _tblStaff1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstudentIDChanging(string value);
    partial void OnstudentIDChanged();
    partial void OnstudentNameChanging(string value);
    partial void OnstudentNameChanged();
    partial void OnstudentPassChanging(string value);
    partial void OnstudentPassChanged();
    partial void OnstudentMailAddrChanging(string value);
    partial void OnstudentMailAddrChanged();
    partial void OnstudentAcademicYearChanging(string value);
    partial void OnstudentAcademicYearChanged();
    partial void OnstudentAvatarChanging(string value);
    partial void OnstudentAvatarChanged();
    partial void OnstudentBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnstudentBirthChanged();
    partial void OnstudentAddrChanging(string value);
    partial void OnstudentAddrChanged();
    partial void OnstudentPhoneChanging(string value);
    partial void OnstudentPhoneChanged();
    partial void OnstudentSupervisorIDChanging(string value);
    partial void OnstudentSupervisorIDChanged();
    partial void OnstudentSecondMarkerIDChanging(string value);
    partial void OnstudentSecondMarkerIDChanged();
    partial void OnstudentLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnstudentLastLoginChanged();
    partial void OnstudentStatusChanging(int value);
    partial void OnstudentStatusChanged();
    #endregion
	
	public tblStudent()
	{
		this._tblAllocations = new EntitySet<tblAllocation>(new Action<tblAllocation>(this.attach_tblAllocations), new Action<tblAllocation>(this.detach_tblAllocations));
		this._tblMeetingMembers = new EntitySet<tblMeetingMember>(new Action<tblMeetingMember>(this.attach_tblMeetingMembers), new Action<tblMeetingMember>(this.detach_tblMeetingMembers));
		this._tblPersonalMessages = new EntitySet<tblPersonalMessage>(new Action<tblPersonalMessage>(this.attach_tblPersonalMessages), new Action<tblPersonalMessage>(this.detach_tblPersonalMessages));
		this._tblStaff = default(EntityRef<tblStaff>);
		this._tblStaff1 = default(EntityRef<tblStaff>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string studentID
	{
		get
		{
			return this._studentID;
		}
		set
		{
			if ((this._studentID != value))
			{
				this.OnstudentIDChanging(value);
				this.SendPropertyChanging();
				this._studentID = value;
				this.SendPropertyChanged("studentID");
				this.OnstudentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentName
	{
		get
		{
			return this._studentName;
		}
		set
		{
			if ((this._studentName != value))
			{
				this.OnstudentNameChanging(value);
				this.SendPropertyChanging();
				this._studentName = value;
				this.SendPropertyChanged("studentName");
				this.OnstudentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentPass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string studentPass
	{
		get
		{
			return this._studentPass;
		}
		set
		{
			if ((this._studentPass != value))
			{
				this.OnstudentPassChanging(value);
				this.SendPropertyChanging();
				this._studentPass = value;
				this.SendPropertyChanged("studentPass");
				this.OnstudentPassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentMailAddr", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentMailAddr
	{
		get
		{
			return this._studentMailAddr;
		}
		set
		{
			if ((this._studentMailAddr != value))
			{
				this.OnstudentMailAddrChanging(value);
				this.SendPropertyChanging();
				this._studentMailAddr = value;
				this.SendPropertyChanged("studentMailAddr");
				this.OnstudentMailAddrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAcademicYear", DbType="VarChar(10)")]
	public string studentAcademicYear
	{
		get
		{
			return this._studentAcademicYear;
		}
		set
		{
			if ((this._studentAcademicYear != value))
			{
				this.OnstudentAcademicYearChanging(value);
				this.SendPropertyChanging();
				this._studentAcademicYear = value;
				this.SendPropertyChanged("studentAcademicYear");
				this.OnstudentAcademicYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAvatar", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
	public string studentAvatar
	{
		get
		{
			return this._studentAvatar;
		}
		set
		{
			if ((this._studentAvatar != value))
			{
				this.OnstudentAvatarChanging(value);
				this.SendPropertyChanging();
				this._studentAvatar = value;
				this.SendPropertyChanged("studentAvatar");
				this.OnstudentAvatarChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentBirth", DbType="DateTime")]
	public System.Nullable<System.DateTime> studentBirth
	{
		get
		{
			return this._studentBirth;
		}
		set
		{
			if ((this._studentBirth != value))
			{
				this.OnstudentBirthChanging(value);
				this.SendPropertyChanging();
				this._studentBirth = value;
				this.SendPropertyChanged("studentBirth");
				this.OnstudentBirthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAddr", DbType="VarChar(250)")]
	public string studentAddr
	{
		get
		{
			return this._studentAddr;
		}
		set
		{
			if ((this._studentAddr != value))
			{
				this.OnstudentAddrChanging(value);
				this.SendPropertyChanging();
				this._studentAddr = value;
				this.SendPropertyChanged("studentAddr");
				this.OnstudentAddrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentPhone", DbType="VarChar(20)")]
	public string studentPhone
	{
		get
		{
			return this._studentPhone;
		}
		set
		{
			if ((this._studentPhone != value))
			{
				this.OnstudentPhoneChanging(value);
				this.SendPropertyChanging();
				this._studentPhone = value;
				this.SendPropertyChanged("studentPhone");
				this.OnstudentPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSupervisorID", DbType="VarChar(20)")]
	public string studentSupervisorID
	{
		get
		{
			return this._studentSupervisorID;
		}
		set
		{
			if ((this._studentSupervisorID != value))
			{
				if (this._tblStaff.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnstudentSupervisorIDChanging(value);
				this.SendPropertyChanging();
				this._studentSupervisorID = value;
				this.SendPropertyChanged("studentSupervisorID");
				this.OnstudentSupervisorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSecondMarkerID", DbType="VarChar(20)")]
	public string studentSecondMarkerID
	{
		get
		{
			return this._studentSecondMarkerID;
		}
		set
		{
			if ((this._studentSecondMarkerID != value))
			{
				if (this._tblStaff1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnstudentSecondMarkerIDChanging(value);
				this.SendPropertyChanging();
				this._studentSecondMarkerID = value;
				this.SendPropertyChanged("studentSecondMarkerID");
				this.OnstudentSecondMarkerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentLastLogin", DbType="DateTime")]
	public System.Nullable<System.DateTime> studentLastLogin
	{
		get
		{
			return this._studentLastLogin;
		}
		set
		{
			if ((this._studentLastLogin != value))
			{
				this.OnstudentLastLoginChanging(value);
				this.SendPropertyChanging();
				this._studentLastLogin = value;
				this.SendPropertyChanged("studentLastLogin");
				this.OnstudentLastLoginChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentStatus", DbType="Int NOT NULL")]
	public int studentStatus
	{
		get
		{
			return this._studentStatus;
		}
		set
		{
			if ((this._studentStatus != value))
			{
				this.OnstudentStatusChanging(value);
				this.SendPropertyChanging();
				this._studentStatus = value;
				this.SendPropertyChanged("studentStatus");
				this.OnstudentStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblAllocation", Storage="_tblAllocations", ThisKey="studentID", OtherKey="eventAffectedStudentID")]
	public EntitySet<tblAllocation> tblAllocations
	{
		get
		{
			return this._tblAllocations;
		}
		set
		{
			this._tblAllocations.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblMeetingMember", Storage="_tblMeetingMembers", ThisKey="studentID", OtherKey="meetingMemberID")]
	public EntitySet<tblMeetingMember> tblMeetingMembers
	{
		get
		{
			return this._tblMeetingMembers;
		}
		set
		{
			this._tblMeetingMembers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblPersonalMessage", Storage="_tblPersonalMessages", ThisKey="studentID", OtherKey="stuID")]
	public EntitySet<tblPersonalMessage> tblPersonalMessages
	{
		get
		{
			return this._tblPersonalMessages;
		}
		set
		{
			this._tblPersonalMessages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblStudent", Storage="_tblStaff", ThisKey="studentSupervisorID", OtherKey="staffID", IsForeignKey=true)]
	public tblStaff tblStaff
	{
		get
		{
			return this._tblStaff.Entity;
		}
		set
		{
			tblStaff previousValue = this._tblStaff.Entity;
			if (((previousValue != value) 
						|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblStaff.Entity = null;
					previousValue.tblStudents.Remove(this);
				}
				this._tblStaff.Entity = value;
				if ((value != null))
				{
					value.tblStudents.Add(this);
					this._studentSupervisorID = value.staffID;
				}
				else
				{
					this._studentSupervisorID = default(string);
				}
				this.SendPropertyChanged("tblStaff");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblStudent1", Storage="_tblStaff1", ThisKey="studentSecondMarkerID", OtherKey="staffID", IsForeignKey=true)]
	public tblStaff tblStaff1
	{
		get
		{
			return this._tblStaff1.Entity;
		}
		set
		{
			tblStaff previousValue = this._tblStaff1.Entity;
			if (((previousValue != value) 
						|| (this._tblStaff1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblStaff1.Entity = null;
					previousValue.tblStudents1.Remove(this);
				}
				this._tblStaff1.Entity = value;
				if ((value != null))
				{
					value.tblStudents1.Add(this);
					this._studentSecondMarkerID = value.staffID;
				}
				else
				{
					this._studentSecondMarkerID = default(string);
				}
				this.SendPropertyChanged("tblStaff1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblAllocations(tblAllocation entity)
	{
		this.SendPropertyChanging();
		entity.tblStudent = this;
	}
	
	private void detach_tblAllocations(tblAllocation entity)
	{
		this.SendPropertyChanging();
		entity.tblStudent = null;
	}
	
	private void attach_tblMeetingMembers(tblMeetingMember entity)
	{
		this.SendPropertyChanging();
		entity.tblStudent = this;
	}
	
	private void detach_tblMeetingMembers(tblMeetingMember entity)
	{
		this.SendPropertyChanging();
		entity.tblStudent = null;
	}
	
	private void attach_tblPersonalMessages(tblPersonalMessage entity)
	{
		this.SendPropertyChanging();
		entity.tblStudent = this;
	}
	
	private void detach_tblPersonalMessages(tblPersonalMessage entity)
	{
		this.SendPropertyChanging();
		entity.tblStudent = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBlogPosts")]
public partial class tblBlogPost : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _postID;
	
	private string _postOwnerID;
	
	private System.DateTime _postDate;
	
	private string _postInfo;
	
	private int _postStatus;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpostIDChanging(string value);
    partial void OnpostIDChanged();
    partial void OnpostOwnerIDChanging(string value);
    partial void OnpostOwnerIDChanged();
    partial void OnpostDateChanging(System.DateTime value);
    partial void OnpostDateChanged();
    partial void OnpostInfoChanging(string value);
    partial void OnpostInfoChanged();
    partial void OnpostStatusChanging(int value);
    partial void OnpostStatusChanged();
    #endregion
	
	public tblBlogPost()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string postID
	{
		get
		{
			return this._postID;
		}
		set
		{
			if ((this._postID != value))
			{
				this.OnpostIDChanging(value);
				this.SendPropertyChanging();
				this._postID = value;
				this.SendPropertyChanged("postID");
				this.OnpostIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postOwnerID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string postOwnerID
	{
		get
		{
			return this._postOwnerID;
		}
		set
		{
			if ((this._postOwnerID != value))
			{
				this.OnpostOwnerIDChanging(value);
				this.SendPropertyChanging();
				this._postOwnerID = value;
				this.SendPropertyChanged("postOwnerID");
				this.OnpostOwnerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postDate", DbType="DateTime NOT NULL")]
	public System.DateTime postDate
	{
		get
		{
			return this._postDate;
		}
		set
		{
			if ((this._postDate != value))
			{
				this.OnpostDateChanging(value);
				this.SendPropertyChanging();
				this._postDate = value;
				this.SendPropertyChanged("postDate");
				this.OnpostDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postInfo", DbType="VarChar(MAX)")]
	public string postInfo
	{
		get
		{
			return this._postInfo;
		}
		set
		{
			if ((this._postInfo != value))
			{
				this.OnpostInfoChanging(value);
				this.SendPropertyChanging();
				this._postInfo = value;
				this.SendPropertyChanged("postInfo");
				this.OnpostInfoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postStatus", DbType="Int NOT NULL")]
	public int postStatus
	{
		get
		{
			return this._postStatus;
		}
		set
		{
			if ((this._postStatus != value))
			{
				this.OnpostStatusChanging(value);
				this.SendPropertyChanging();
				this._postStatus = value;
				this.SendPropertyChanged("postStatus");
				this.OnpostStatusChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDocumentComments")]
public partial class tblDocumentComment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _commentID;
	
	private System.DateTime _commentDate;
	
	private int _commentDocID;
	
	private string _commentStaffID;
	
	private string _commentInfo;
	
	private int _commentStatus;
	
	private EntityRef<tblDocument> _tblDocument;
	
	private EntityRef<tblStaff> _tblStaff;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncommentIDChanging(int value);
    partial void OncommentIDChanged();
    partial void OncommentDateChanging(System.DateTime value);
    partial void OncommentDateChanged();
    partial void OncommentDocIDChanging(int value);
    partial void OncommentDocIDChanged();
    partial void OncommentStaffIDChanging(string value);
    partial void OncommentStaffIDChanged();
    partial void OncommentInfoChanging(string value);
    partial void OncommentInfoChanged();
    partial void OncommentStatusChanging(int value);
    partial void OncommentStatusChanged();
    #endregion
	
	public tblDocumentComment()
	{
		this._tblDocument = default(EntityRef<tblDocument>);
		this._tblStaff = default(EntityRef<tblStaff>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int commentID
	{
		get
		{
			return this._commentID;
		}
		set
		{
			if ((this._commentID != value))
			{
				this.OncommentIDChanging(value);
				this.SendPropertyChanging();
				this._commentID = value;
				this.SendPropertyChanged("commentID");
				this.OncommentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentDate", DbType="DateTime NOT NULL")]
	public System.DateTime commentDate
	{
		get
		{
			return this._commentDate;
		}
		set
		{
			if ((this._commentDate != value))
			{
				this.OncommentDateChanging(value);
				this.SendPropertyChanging();
				this._commentDate = value;
				this.SendPropertyChanged("commentDate");
				this.OncommentDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentDocID", DbType="Int NOT NULL")]
	public int commentDocID
	{
		get
		{
			return this._commentDocID;
		}
		set
		{
			if ((this._commentDocID != value))
			{
				if (this._tblDocument.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OncommentDocIDChanging(value);
				this.SendPropertyChanging();
				this._commentDocID = value;
				this.SendPropertyChanged("commentDocID");
				this.OncommentDocIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentStaffID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string commentStaffID
	{
		get
		{
			return this._commentStaffID;
		}
		set
		{
			if ((this._commentStaffID != value))
			{
				if (this._tblStaff.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OncommentStaffIDChanging(value);
				this.SendPropertyChanging();
				this._commentStaffID = value;
				this.SendPropertyChanged("commentStaffID");
				this.OncommentStaffIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentInfo", DbType="VarChar(500)")]
	public string commentInfo
	{
		get
		{
			return this._commentInfo;
		}
		set
		{
			if ((this._commentInfo != value))
			{
				this.OncommentInfoChanging(value);
				this.SendPropertyChanging();
				this._commentInfo = value;
				this.SendPropertyChanged("commentInfo");
				this.OncommentInfoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentStatus", DbType="Int NOT NULL")]
	public int commentStatus
	{
		get
		{
			return this._commentStatus;
		}
		set
		{
			if ((this._commentStatus != value))
			{
				this.OncommentStatusChanging(value);
				this.SendPropertyChanging();
				this._commentStatus = value;
				this.SendPropertyChanged("commentStatus");
				this.OncommentStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDocument_tblDocumentComment", Storage="_tblDocument", ThisKey="commentDocID", OtherKey="documentID", IsForeignKey=true)]
	public tblDocument tblDocument
	{
		get
		{
			return this._tblDocument.Entity;
		}
		set
		{
			tblDocument previousValue = this._tblDocument.Entity;
			if (((previousValue != value) 
						|| (this._tblDocument.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblDocument.Entity = null;
					previousValue.tblDocumentComments.Remove(this);
				}
				this._tblDocument.Entity = value;
				if ((value != null))
				{
					value.tblDocumentComments.Add(this);
					this._commentDocID = value.documentID;
				}
				else
				{
					this._commentDocID = default(int);
				}
				this.SendPropertyChanged("tblDocument");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblDocumentComment", Storage="_tblStaff", ThisKey="commentStaffID", OtherKey="staffID", IsForeignKey=true)]
	public tblStaff tblStaff
	{
		get
		{
			return this._tblStaff.Entity;
		}
		set
		{
			tblStaff previousValue = this._tblStaff.Entity;
			if (((previousValue != value) 
						|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblStaff.Entity = null;
					previousValue.tblDocumentComments.Remove(this);
				}
				this._tblStaff.Entity = value;
				if ((value != null))
				{
					value.tblDocumentComments.Add(this);
					this._commentStaffID = value.staffID;
				}
				else
				{
					this._commentStaffID = default(string);
				}
				this.SendPropertyChanged("tblStaff");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDocuments")]
public partial class tblDocument : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _documentID;
	
	private string _documentTitle;
	
	private System.DateTime _documentDate;
	
	private string _documentLink;
	
	private string _documentDes;
	
	private string _documentUploader;
	
	private int _documentStatus;
	
	private EntitySet<tblDocumentComment> _tblDocumentComments;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocumentIDChanging(int value);
    partial void OndocumentIDChanged();
    partial void OndocumentTitleChanging(string value);
    partial void OndocumentTitleChanged();
    partial void OndocumentDateChanging(System.DateTime value);
    partial void OndocumentDateChanged();
    partial void OndocumentLinkChanging(string value);
    partial void OndocumentLinkChanged();
    partial void OndocumentDesChanging(string value);
    partial void OndocumentDesChanged();
    partial void OndocumentUploaderChanging(string value);
    partial void OndocumentUploaderChanged();
    partial void OndocumentStatusChanging(int value);
    partial void OndocumentStatusChanged();
    #endregion
	
	public tblDocument()
	{
		this._tblDocumentComments = new EntitySet<tblDocumentComment>(new Action<tblDocumentComment>(this.attach_tblDocumentComments), new Action<tblDocumentComment>(this.detach_tblDocumentComments));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int documentID
	{
		get
		{
			return this._documentID;
		}
		set
		{
			if ((this._documentID != value))
			{
				this.OndocumentIDChanging(value);
				this.SendPropertyChanging();
				this._documentID = value;
				this.SendPropertyChanged("documentID");
				this.OndocumentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentTitle", DbType="VarChar(100)")]
	public string documentTitle
	{
		get
		{
			return this._documentTitle;
		}
		set
		{
			if ((this._documentTitle != value))
			{
				this.OndocumentTitleChanging(value);
				this.SendPropertyChanging();
				this._documentTitle = value;
				this.SendPropertyChanged("documentTitle");
				this.OndocumentTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentDate", DbType="DateTime NOT NULL")]
	public System.DateTime documentDate
	{
		get
		{
			return this._documentDate;
		}
		set
		{
			if ((this._documentDate != value))
			{
				this.OndocumentDateChanging(value);
				this.SendPropertyChanging();
				this._documentDate = value;
				this.SendPropertyChanged("documentDate");
				this.OndocumentDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentLink", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string documentLink
	{
		get
		{
			return this._documentLink;
		}
		set
		{
			if ((this._documentLink != value))
			{
				this.OndocumentLinkChanging(value);
				this.SendPropertyChanging();
				this._documentLink = value;
				this.SendPropertyChanged("documentLink");
				this.OndocumentLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentDes", DbType="VarChar(250)")]
	public string documentDes
	{
		get
		{
			return this._documentDes;
		}
		set
		{
			if ((this._documentDes != value))
			{
				this.OndocumentDesChanging(value);
				this.SendPropertyChanging();
				this._documentDes = value;
				this.SendPropertyChanged("documentDes");
				this.OndocumentDesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentUploader", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string documentUploader
	{
		get
		{
			return this._documentUploader;
		}
		set
		{
			if ((this._documentUploader != value))
			{
				this.OndocumentUploaderChanging(value);
				this.SendPropertyChanging();
				this._documentUploader = value;
				this.SendPropertyChanged("documentUploader");
				this.OndocumentUploaderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentStatus", DbType="Int NOT NULL")]
	public int documentStatus
	{
		get
		{
			return this._documentStatus;
		}
		set
		{
			if ((this._documentStatus != value))
			{
				this.OndocumentStatusChanging(value);
				this.SendPropertyChanging();
				this._documentStatus = value;
				this.SendPropertyChanged("documentStatus");
				this.OndocumentStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDocument_tblDocumentComment", Storage="_tblDocumentComments", ThisKey="documentID", OtherKey="commentDocID")]
	public EntitySet<tblDocumentComment> tblDocumentComments
	{
		get
		{
			return this._tblDocumentComments;
		}
		set
		{
			this._tblDocumentComments.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblDocumentComments(tblDocumentComment entity)
	{
		this.SendPropertyChanging();
		entity.tblDocument = this;
	}
	
	private void detach_tblDocumentComments(tblDocumentComment entity)
	{
		this.SendPropertyChanging();
		entity.tblDocument = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLogFolders")]
public partial class tblLogFolder
{
	
	private string _meetingLogFolder;
	
	private string _avatarFolder;
	
	private string _documentFolder;
	
	public tblLogFolder()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingLogFolder", DbType="VarChar(250)")]
	public string meetingLogFolder
	{
		get
		{
			return this._meetingLogFolder;
		}
		set
		{
			if ((this._meetingLogFolder != value))
			{
				this._meetingLogFolder = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avatarFolder", DbType="VarChar(250)")]
	public string avatarFolder
	{
		get
		{
			return this._avatarFolder;
		}
		set
		{
			if ((this._avatarFolder != value))
			{
				this._avatarFolder = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentFolder", DbType="VarChar(250)")]
	public string documentFolder
	{
		get
		{
			return this._documentFolder;
		}
		set
		{
			if ((this._documentFolder != value))
			{
				this._documentFolder = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMeetingMembers")]
public partial class tblMeetingMember : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _meetingID;
	
	private string _meetingMemberID;
	
	private int _memberStatus;
	
	private EntityRef<tblStudent> _tblStudent;
	
	private EntityRef<tblMeeting> _tblMeeting;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmeetingIDChanging(int value);
    partial void OnmeetingIDChanged();
    partial void OnmeetingMemberIDChanging(string value);
    partial void OnmeetingMemberIDChanged();
    partial void OnmemberStatusChanging(int value);
    partial void OnmemberStatusChanged();
    #endregion
	
	public tblMeetingMember()
	{
		this._tblStudent = default(EntityRef<tblStudent>);
		this._tblMeeting = default(EntityRef<tblMeeting>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int meetingID
	{
		get
		{
			return this._meetingID;
		}
		set
		{
			if ((this._meetingID != value))
			{
				if (this._tblMeeting.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnmeetingIDChanging(value);
				this.SendPropertyChanging();
				this._meetingID = value;
				this.SendPropertyChanged("meetingID");
				this.OnmeetingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingMemberID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string meetingMemberID
	{
		get
		{
			return this._meetingMemberID;
		}
		set
		{
			if ((this._meetingMemberID != value))
			{
				if (this._tblStudent.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnmeetingMemberIDChanging(value);
				this.SendPropertyChanging();
				this._meetingMemberID = value;
				this.SendPropertyChanged("meetingMemberID");
				this.OnmeetingMemberIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberStatus", DbType="Int NOT NULL")]
	public int memberStatus
	{
		get
		{
			return this._memberStatus;
		}
		set
		{
			if ((this._memberStatus != value))
			{
				this.OnmemberStatusChanging(value);
				this.SendPropertyChanging();
				this._memberStatus = value;
				this.SendPropertyChanged("memberStatus");
				this.OnmemberStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblMeetingMember", Storage="_tblStudent", ThisKey="meetingMemberID", OtherKey="studentID", IsForeignKey=true)]
	public tblStudent tblStudent
	{
		get
		{
			return this._tblStudent.Entity;
		}
		set
		{
			tblStudent previousValue = this._tblStudent.Entity;
			if (((previousValue != value) 
						|| (this._tblStudent.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblStudent.Entity = null;
					previousValue.tblMeetingMembers.Remove(this);
				}
				this._tblStudent.Entity = value;
				if ((value != null))
				{
					value.tblMeetingMembers.Add(this);
					this._meetingMemberID = value.studentID;
				}
				else
				{
					this._meetingMemberID = default(string);
				}
				this.SendPropertyChanged("tblStudent");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMeeting_tblMeetingMember", Storage="_tblMeeting", ThisKey="meetingID", OtherKey="meetingID", IsForeignKey=true)]
	public tblMeeting tblMeeting
	{
		get
		{
			return this._tblMeeting.Entity;
		}
		set
		{
			tblMeeting previousValue = this._tblMeeting.Entity;
			if (((previousValue != value) 
						|| (this._tblMeeting.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblMeeting.Entity = null;
					previousValue.tblMeetingMembers.Remove(this);
				}
				this._tblMeeting.Entity = value;
				if ((value != null))
				{
					value.tblMeetingMembers.Add(this);
					this._meetingID = value.meetingID;
				}
				else
				{
					this._meetingID = default(int);
				}
				this.SendPropertyChanged("tblMeeting");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMeetings")]
public partial class tblMeeting : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _meetingID;
	
	private bool _meetingType;
	
	private System.Nullable<System.DateTime> _meetingDate;
	
	private string _meetingPlace;
	
	private string _meetingTopic;
	
	private string _meetingHost;
	
	private string _meetingLogFile;
	
	private int _meetingStatus;
	
	private EntitySet<tblMeetingMember> _tblMeetingMembers;
	
	private EntityRef<tblStaff> _tblStaff;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmeetingIDChanging(int value);
    partial void OnmeetingIDChanged();
    partial void OnmeetingTypeChanging(bool value);
    partial void OnmeetingTypeChanged();
    partial void OnmeetingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnmeetingDateChanged();
    partial void OnmeetingPlaceChanging(string value);
    partial void OnmeetingPlaceChanged();
    partial void OnmeetingTopicChanging(string value);
    partial void OnmeetingTopicChanged();
    partial void OnmeetingHostChanging(string value);
    partial void OnmeetingHostChanged();
    partial void OnmeetingLogFileChanging(string value);
    partial void OnmeetingLogFileChanged();
    partial void OnmeetingStatusChanging(int value);
    partial void OnmeetingStatusChanged();
    #endregion
	
	public tblMeeting()
	{
		this._tblMeetingMembers = new EntitySet<tblMeetingMember>(new Action<tblMeetingMember>(this.attach_tblMeetingMembers), new Action<tblMeetingMember>(this.detach_tblMeetingMembers));
		this._tblStaff = default(EntityRef<tblStaff>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int meetingID
	{
		get
		{
			return this._meetingID;
		}
		set
		{
			if ((this._meetingID != value))
			{
				this.OnmeetingIDChanging(value);
				this.SendPropertyChanging();
				this._meetingID = value;
				this.SendPropertyChanged("meetingID");
				this.OnmeetingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingType", DbType="Bit NOT NULL")]
	public bool meetingType
	{
		get
		{
			return this._meetingType;
		}
		set
		{
			if ((this._meetingType != value))
			{
				this.OnmeetingTypeChanging(value);
				this.SendPropertyChanging();
				this._meetingType = value;
				this.SendPropertyChanged("meetingType");
				this.OnmeetingTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> meetingDate
	{
		get
		{
			return this._meetingDate;
		}
		set
		{
			if ((this._meetingDate != value))
			{
				this.OnmeetingDateChanging(value);
				this.SendPropertyChanging();
				this._meetingDate = value;
				this.SendPropertyChanged("meetingDate");
				this.OnmeetingDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingPlace", DbType="VarChar(250)")]
	public string meetingPlace
	{
		get
		{
			return this._meetingPlace;
		}
		set
		{
			if ((this._meetingPlace != value))
			{
				this.OnmeetingPlaceChanging(value);
				this.SendPropertyChanging();
				this._meetingPlace = value;
				this.SendPropertyChanged("meetingPlace");
				this.OnmeetingPlaceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingTopic", DbType="VarChar(250)")]
	public string meetingTopic
	{
		get
		{
			return this._meetingTopic;
		}
		set
		{
			if ((this._meetingTopic != value))
			{
				this.OnmeetingTopicChanging(value);
				this.SendPropertyChanging();
				this._meetingTopic = value;
				this.SendPropertyChanged("meetingTopic");
				this.OnmeetingTopicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingHost", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string meetingHost
	{
		get
		{
			return this._meetingHost;
		}
		set
		{
			if ((this._meetingHost != value))
			{
				if (this._tblStaff.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnmeetingHostChanging(value);
				this.SendPropertyChanging();
				this._meetingHost = value;
				this.SendPropertyChanged("meetingHost");
				this.OnmeetingHostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingLogFile", DbType="VarChar(100)")]
	public string meetingLogFile
	{
		get
		{
			return this._meetingLogFile;
		}
		set
		{
			if ((this._meetingLogFile != value))
			{
				this.OnmeetingLogFileChanging(value);
				this.SendPropertyChanging();
				this._meetingLogFile = value;
				this.SendPropertyChanged("meetingLogFile");
				this.OnmeetingLogFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingStatus", DbType="Int NOT NULL")]
	public int meetingStatus
	{
		get
		{
			return this._meetingStatus;
		}
		set
		{
			if ((this._meetingStatus != value))
			{
				this.OnmeetingStatusChanging(value);
				this.SendPropertyChanging();
				this._meetingStatus = value;
				this.SendPropertyChanged("meetingStatus");
				this.OnmeetingStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMeeting_tblMeetingMember", Storage="_tblMeetingMembers", ThisKey="meetingID", OtherKey="meetingID")]
	public EntitySet<tblMeetingMember> tblMeetingMembers
	{
		get
		{
			return this._tblMeetingMembers;
		}
		set
		{
			this._tblMeetingMembers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblMeeting", Storage="_tblStaff", ThisKey="meetingHost", OtherKey="staffID", IsForeignKey=true)]
	public tblStaff tblStaff
	{
		get
		{
			return this._tblStaff.Entity;
		}
		set
		{
			tblStaff previousValue = this._tblStaff.Entity;
			if (((previousValue != value) 
						|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblStaff.Entity = null;
					previousValue.tblMeetings.Remove(this);
				}
				this._tblStaff.Entity = value;
				if ((value != null))
				{
					value.tblMeetings.Add(this);
					this._meetingHost = value.staffID;
				}
				else
				{
					this._meetingHost = default(string);
				}
				this.SendPropertyChanged("tblStaff");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblMeetingMembers(tblMeetingMember entity)
	{
		this.SendPropertyChanging();
		entity.tblMeeting = this;
	}
	
	private void detach_tblMeetingMembers(tblMeetingMember entity)
	{
		this.SendPropertyChanging();
		entity.tblMeeting = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPersonalMessages")]
public partial class tblPersonalMessage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _staffID;
	
	private string _stuID;
	
	private System.DateTime _messSentTime;
	
	private string _messInfo;
	
	private int _messStatus;
	
	private EntityRef<tblStudent> _tblStudent;
	
	private EntityRef<tblStaff> _tblStaff;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstaffIDChanging(string value);
    partial void OnstaffIDChanged();
    partial void OnstuIDChanging(string value);
    partial void OnstuIDChanged();
    partial void OnmessSentTimeChanging(System.DateTime value);
    partial void OnmessSentTimeChanged();
    partial void OnmessInfoChanging(string value);
    partial void OnmessInfoChanged();
    partial void OnmessStatusChanging(int value);
    partial void OnmessStatusChanged();
    #endregion
	
	public tblPersonalMessage()
	{
		this._tblStudent = default(EntityRef<tblStudent>);
		this._tblStaff = default(EntityRef<tblStaff>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string staffID
	{
		get
		{
			return this._staffID;
		}
		set
		{
			if ((this._staffID != value))
			{
				if (this._tblStaff.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnstaffIDChanging(value);
				this.SendPropertyChanging();
				this._staffID = value;
				this.SendPropertyChanged("staffID");
				this.OnstaffIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string stuID
	{
		get
		{
			return this._stuID;
		}
		set
		{
			if ((this._stuID != value))
			{
				if (this._tblStudent.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnstuIDChanging(value);
				this.SendPropertyChanging();
				this._stuID = value;
				this.SendPropertyChanged("stuID");
				this.OnstuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messSentTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
	public System.DateTime messSentTime
	{
		get
		{
			return this._messSentTime;
		}
		set
		{
			if ((this._messSentTime != value))
			{
				this.OnmessSentTimeChanging(value);
				this.SendPropertyChanging();
				this._messSentTime = value;
				this.SendPropertyChanged("messSentTime");
				this.OnmessSentTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messInfo", DbType="VarChar(300)")]
	public string messInfo
	{
		get
		{
			return this._messInfo;
		}
		set
		{
			if ((this._messInfo != value))
			{
				this.OnmessInfoChanging(value);
				this.SendPropertyChanging();
				this._messInfo = value;
				this.SendPropertyChanged("messInfo");
				this.OnmessInfoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messStatus", DbType="Int NOT NULL")]
	public int messStatus
	{
		get
		{
			return this._messStatus;
		}
		set
		{
			if ((this._messStatus != value))
			{
				this.OnmessStatusChanging(value);
				this.SendPropertyChanging();
				this._messStatus = value;
				this.SendPropertyChanged("messStatus");
				this.OnmessStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblPersonalMessage", Storage="_tblStudent", ThisKey="stuID", OtherKey="studentID", IsForeignKey=true)]
	public tblStudent tblStudent
	{
		get
		{
			return this._tblStudent.Entity;
		}
		set
		{
			tblStudent previousValue = this._tblStudent.Entity;
			if (((previousValue != value) 
						|| (this._tblStudent.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblStudent.Entity = null;
					previousValue.tblPersonalMessages.Remove(this);
				}
				this._tblStudent.Entity = value;
				if ((value != null))
				{
					value.tblPersonalMessages.Add(this);
					this._stuID = value.studentID;
				}
				else
				{
					this._stuID = default(string);
				}
				this.SendPropertyChanged("tblStudent");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblPersonalMessage", Storage="_tblStaff", ThisKey="staffID", OtherKey="staffID", IsForeignKey=true)]
	public tblStaff tblStaff
	{
		get
		{
			return this._tblStaff.Entity;
		}
		set
		{
			tblStaff previousValue = this._tblStaff.Entity;
			if (((previousValue != value) 
						|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblStaff.Entity = null;
					previousValue.tblPersonalMessages.Remove(this);
				}
				this._tblStaff.Entity = value;
				if ((value != null))
				{
					value.tblPersonalMessages.Add(this);
					this._staffID = value.staffID;
				}
				else
				{
					this._staffID = default(string);
				}
				this.SendPropertyChanged("tblStaff");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStaffs")]
public partial class tblStaff : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _staffID;
	
	private string _staffName;
	
	private string _staffPass;
	
	private string _staffMailAddr;
	
	private string _staffAvatar;
	
	private System.Nullable<System.DateTime> _staffBirth;
	
	private string _staffAddr;
	
	private string _staffPhone;
	
	private int _staffType;
	
	private int _staffStatus;
	
	private EntitySet<tblAllocation> _tblAllocations;
	
	private EntitySet<tblAllocation> _tblAllocations1;
	
	private EntitySet<tblStudent> _tblStudents;
	
	private EntitySet<tblStudent> _tblStudents1;
	
	private EntitySet<tblDocumentComment> _tblDocumentComments;
	
	private EntitySet<tblMeeting> _tblMeetings;
	
	private EntitySet<tblPersonalMessage> _tblPersonalMessages;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstaffIDChanging(string value);
    partial void OnstaffIDChanged();
    partial void OnstaffNameChanging(string value);
    partial void OnstaffNameChanged();
    partial void OnstaffPassChanging(string value);
    partial void OnstaffPassChanged();
    partial void OnstaffMailAddrChanging(string value);
    partial void OnstaffMailAddrChanged();
    partial void OnstaffAvatarChanging(string value);
    partial void OnstaffAvatarChanged();
    partial void OnstaffBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnstaffBirthChanged();
    partial void OnstaffAddrChanging(string value);
    partial void OnstaffAddrChanged();
    partial void OnstaffPhoneChanging(string value);
    partial void OnstaffPhoneChanged();
    partial void OnstaffTypeChanging(int value);
    partial void OnstaffTypeChanged();
    partial void OnstaffStatusChanging(int value);
    partial void OnstaffStatusChanged();
    #endregion
	
	public tblStaff()
	{
		this._tblAllocations = new EntitySet<tblAllocation>(new Action<tblAllocation>(this.attach_tblAllocations), new Action<tblAllocation>(this.detach_tblAllocations));
		this._tblAllocations1 = new EntitySet<tblAllocation>(new Action<tblAllocation>(this.attach_tblAllocations1), new Action<tblAllocation>(this.detach_tblAllocations1));
		this._tblStudents = new EntitySet<tblStudent>(new Action<tblStudent>(this.attach_tblStudents), new Action<tblStudent>(this.detach_tblStudents));
		this._tblStudents1 = new EntitySet<tblStudent>(new Action<tblStudent>(this.attach_tblStudents1), new Action<tblStudent>(this.detach_tblStudents1));
		this._tblDocumentComments = new EntitySet<tblDocumentComment>(new Action<tblDocumentComment>(this.attach_tblDocumentComments), new Action<tblDocumentComment>(this.detach_tblDocumentComments));
		this._tblMeetings = new EntitySet<tblMeeting>(new Action<tblMeeting>(this.attach_tblMeetings), new Action<tblMeeting>(this.detach_tblMeetings));
		this._tblPersonalMessages = new EntitySet<tblPersonalMessage>(new Action<tblPersonalMessage>(this.attach_tblPersonalMessages), new Action<tblPersonalMessage>(this.detach_tblPersonalMessages));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string staffID
	{
		get
		{
			return this._staffID;
		}
		set
		{
			if ((this._staffID != value))
			{
				this.OnstaffIDChanging(value);
				this.SendPropertyChanging();
				this._staffID = value;
				this.SendPropertyChanged("staffID");
				this.OnstaffIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string staffName
	{
		get
		{
			return this._staffName;
		}
		set
		{
			if ((this._staffName != value))
			{
				this.OnstaffNameChanging(value);
				this.SendPropertyChanging();
				this._staffName = value;
				this.SendPropertyChanged("staffName");
				this.OnstaffNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffPass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string staffPass
	{
		get
		{
			return this._staffPass;
		}
		set
		{
			if ((this._staffPass != value))
			{
				this.OnstaffPassChanging(value);
				this.SendPropertyChanging();
				this._staffPass = value;
				this.SendPropertyChanged("staffPass");
				this.OnstaffPassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffMailAddr", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string staffMailAddr
	{
		get
		{
			return this._staffMailAddr;
		}
		set
		{
			if ((this._staffMailAddr != value))
			{
				this.OnstaffMailAddrChanging(value);
				this.SendPropertyChanging();
				this._staffMailAddr = value;
				this.SendPropertyChanged("staffMailAddr");
				this.OnstaffMailAddrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffAvatar", DbType="VarChar(250)")]
	public string staffAvatar
	{
		get
		{
			return this._staffAvatar;
		}
		set
		{
			if ((this._staffAvatar != value))
			{
				this.OnstaffAvatarChanging(value);
				this.SendPropertyChanging();
				this._staffAvatar = value;
				this.SendPropertyChanged("staffAvatar");
				this.OnstaffAvatarChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffBirth", DbType="DateTime")]
	public System.Nullable<System.DateTime> staffBirth
	{
		get
		{
			return this._staffBirth;
		}
		set
		{
			if ((this._staffBirth != value))
			{
				this.OnstaffBirthChanging(value);
				this.SendPropertyChanging();
				this._staffBirth = value;
				this.SendPropertyChanged("staffBirth");
				this.OnstaffBirthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffAddr", DbType="VarChar(250)")]
	public string staffAddr
	{
		get
		{
			return this._staffAddr;
		}
		set
		{
			if ((this._staffAddr != value))
			{
				this.OnstaffAddrChanging(value);
				this.SendPropertyChanging();
				this._staffAddr = value;
				this.SendPropertyChanged("staffAddr");
				this.OnstaffAddrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffPhone", DbType="VarChar(20)")]
	public string staffPhone
	{
		get
		{
			return this._staffPhone;
		}
		set
		{
			if ((this._staffPhone != value))
			{
				this.OnstaffPhoneChanging(value);
				this.SendPropertyChanging();
				this._staffPhone = value;
				this.SendPropertyChanged("staffPhone");
				this.OnstaffPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffType", DbType="Int NOT NULL")]
	public int staffType
	{
		get
		{
			return this._staffType;
		}
		set
		{
			if ((this._staffType != value))
			{
				this.OnstaffTypeChanging(value);
				this.SendPropertyChanging();
				this._staffType = value;
				this.SendPropertyChanged("staffType");
				this.OnstaffTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffStatus", DbType="Int NOT NULL")]
	public int staffStatus
	{
		get
		{
			return this._staffStatus;
		}
		set
		{
			if ((this._staffStatus != value))
			{
				this.OnstaffStatusChanging(value);
				this.SendPropertyChanging();
				this._staffStatus = value;
				this.SendPropertyChanged("staffStatus");
				this.OnstaffStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblAllocation", Storage="_tblAllocations", ThisKey="staffID", OtherKey="eventAffectedStaffID")]
	public EntitySet<tblAllocation> tblAllocations
	{
		get
		{
			return this._tblAllocations;
		}
		set
		{
			this._tblAllocations.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblAllocation1", Storage="_tblAllocations1", ThisKey="staffID", OtherKey="eventCreatorID")]
	public EntitySet<tblAllocation> tblAllocations1
	{
		get
		{
			return this._tblAllocations1;
		}
		set
		{
			this._tblAllocations1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblStudent", Storage="_tblStudents", ThisKey="staffID", OtherKey="studentSupervisorID")]
	public EntitySet<tblStudent> tblStudents
	{
		get
		{
			return this._tblStudents;
		}
		set
		{
			this._tblStudents.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblStudent1", Storage="_tblStudents1", ThisKey="staffID", OtherKey="studentSecondMarkerID")]
	public EntitySet<tblStudent> tblStudents1
	{
		get
		{
			return this._tblStudents1;
		}
		set
		{
			this._tblStudents1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblDocumentComment", Storage="_tblDocumentComments", ThisKey="staffID", OtherKey="commentStaffID")]
	public EntitySet<tblDocumentComment> tblDocumentComments
	{
		get
		{
			return this._tblDocumentComments;
		}
		set
		{
			this._tblDocumentComments.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblMeeting", Storage="_tblMeetings", ThisKey="staffID", OtherKey="meetingHost")]
	public EntitySet<tblMeeting> tblMeetings
	{
		get
		{
			return this._tblMeetings;
		}
		set
		{
			this._tblMeetings.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblPersonalMessage", Storage="_tblPersonalMessages", ThisKey="staffID", OtherKey="staffID")]
	public EntitySet<tblPersonalMessage> tblPersonalMessages
	{
		get
		{
			return this._tblPersonalMessages;
		}
		set
		{
			this._tblPersonalMessages.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblAllocations(tblAllocation entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff = this;
	}
	
	private void detach_tblAllocations(tblAllocation entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff = null;
	}
	
	private void attach_tblAllocations1(tblAllocation entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff1 = this;
	}
	
	private void detach_tblAllocations1(tblAllocation entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff1 = null;
	}
	
	private void attach_tblStudents(tblStudent entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff = this;
	}
	
	private void detach_tblStudents(tblStudent entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff = null;
	}
	
	private void attach_tblStudents1(tblStudent entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff1 = this;
	}
	
	private void detach_tblStudents1(tblStudent entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff1 = null;
	}
	
	private void attach_tblDocumentComments(tblDocumentComment entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff = this;
	}
	
	private void detach_tblDocumentComments(tblDocumentComment entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff = null;
	}
	
	private void attach_tblMeetings(tblMeeting entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff = this;
	}
	
	private void detach_tblMeetings(tblMeeting entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff = null;
	}
	
	private void attach_tblPersonalMessages(tblPersonalMessage entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff = this;
	}
	
	private void detach_tblPersonalMessages(tblPersonalMessage entity)
	{
		this.SendPropertyChanging();
		entity.tblStaff = null;
	}
}

public partial class getAllocationsByStaffResult
{
	
	private int _eventID;
	
	private string _staffName;
	
	private string _studentName;
	
	private string _eventType;
	
	private System.DateTime _eventDate;
	
	private string _eventInfo;
	
	private int _eventStatus;
	
	public getAllocationsByStaffResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventID", DbType="Int NOT NULL")]
	public int eventID
	{
		get
		{
			return this._eventID;
		}
		set
		{
			if ((this._eventID != value))
			{
				this._eventID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string staffName
	{
		get
		{
			return this._staffName;
		}
		set
		{
			if ((this._staffName != value))
			{
				this._staffName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentName
	{
		get
		{
			return this._studentName;
		}
		set
		{
			if ((this._studentName != value))
			{
				this._studentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string eventType
	{
		get
		{
			return this._eventType;
		}
		set
		{
			if ((this._eventType != value))
			{
				this._eventType = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventDate", DbType="DateTime NOT NULL")]
	public System.DateTime eventDate
	{
		get
		{
			return this._eventDate;
		}
		set
		{
			if ((this._eventDate != value))
			{
				this._eventDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventInfo", DbType="VarChar(100)")]
	public string eventInfo
	{
		get
		{
			return this._eventInfo;
		}
		set
		{
			if ((this._eventInfo != value))
			{
				this._eventInfo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventStatus", DbType="Int NOT NULL")]
	public int eventStatus
	{
		get
		{
			return this._eventStatus;
		}
		set
		{
			if ((this._eventStatus != value))
			{
				this._eventStatus = value;
			}
		}
	}
}

public partial class getDocLinkByIDResult
{
	
	private string _documentLink;
	
	public getDocLinkByIDResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentLink", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string documentLink
	{
		get
		{
			return this._documentLink;
		}
		set
		{
			if ((this._documentLink != value))
			{
				this._documentLink = value;
			}
		}
	}
}

public partial class getStaffNameByIDResult
{
	
	private string _staffName;
	
	public getStaffNameByIDResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string staffName
	{
		get
		{
			return this._staffName;
		}
		set
		{
			if ((this._staffName != value))
			{
				this._staffName = value;
			}
		}
	}
}

public partial class getStaffsByPKResult
{
	
	private string _staffID;
	
	private string _staffName;
	
	private string _staffMailAddr;
	
	private string _staffAvatar;
	
	private System.Nullable<System.DateTime> _staffBirth;
	
	private string _staffAddr;
	
	private string _staffPhone;
	
	private int _staffType;
	
	private int _staffStatus;
	
	public getStaffsByPKResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string staffID
	{
		get
		{
			return this._staffID;
		}
		set
		{
			if ((this._staffID != value))
			{
				this._staffID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string staffName
	{
		get
		{
			return this._staffName;
		}
		set
		{
			if ((this._staffName != value))
			{
				this._staffName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffMailAddr", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string staffMailAddr
	{
		get
		{
			return this._staffMailAddr;
		}
		set
		{
			if ((this._staffMailAddr != value))
			{
				this._staffMailAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffAvatar", DbType="VarChar(250)")]
	public string staffAvatar
	{
		get
		{
			return this._staffAvatar;
		}
		set
		{
			if ((this._staffAvatar != value))
			{
				this._staffAvatar = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffBirth", DbType="DateTime")]
	public System.Nullable<System.DateTime> staffBirth
	{
		get
		{
			return this._staffBirth;
		}
		set
		{
			if ((this._staffBirth != value))
			{
				this._staffBirth = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffAddr", DbType="VarChar(250)")]
	public string staffAddr
	{
		get
		{
			return this._staffAddr;
		}
		set
		{
			if ((this._staffAddr != value))
			{
				this._staffAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffPhone", DbType="VarChar(20)")]
	public string staffPhone
	{
		get
		{
			return this._staffPhone;
		}
		set
		{
			if ((this._staffPhone != value))
			{
				this._staffPhone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffType", DbType="Int NOT NULL")]
	public int staffType
	{
		get
		{
			return this._staffType;
		}
		set
		{
			if ((this._staffType != value))
			{
				this._staffType = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffStatus", DbType="Int NOT NULL")]
	public int staffStatus
	{
		get
		{
			return this._staffStatus;
		}
		set
		{
			if ((this._staffStatus != value))
			{
				this._staffStatus = value;
			}
		}
	}
}

public partial class getStaffsLikeNameResult
{
	
	private int _staffStatus;
	
	private int _staffType;
	
	private string _staffPhone;
	
	private string _staffAddr;
	
	private System.Nullable<System.DateTime> _staffBirth;
	
	private string _staffAvatar;
	
	private string _staffMailAddr;
	
	private string _staffName;
	
	private string _staffID;
	
	public getStaffsLikeNameResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffStatus", DbType="Int NOT NULL")]
	public int staffStatus
	{
		get
		{
			return this._staffStatus;
		}
		set
		{
			if ((this._staffStatus != value))
			{
				this._staffStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffType", DbType="Int NOT NULL")]
	public int staffType
	{
		get
		{
			return this._staffType;
		}
		set
		{
			if ((this._staffType != value))
			{
				this._staffType = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffPhone", DbType="VarChar(20)")]
	public string staffPhone
	{
		get
		{
			return this._staffPhone;
		}
		set
		{
			if ((this._staffPhone != value))
			{
				this._staffPhone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffAddr", DbType="VarChar(250)")]
	public string staffAddr
	{
		get
		{
			return this._staffAddr;
		}
		set
		{
			if ((this._staffAddr != value))
			{
				this._staffAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffBirth", DbType="DateTime")]
	public System.Nullable<System.DateTime> staffBirth
	{
		get
		{
			return this._staffBirth;
		}
		set
		{
			if ((this._staffBirth != value))
			{
				this._staffBirth = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffAvatar", DbType="VarChar(250)")]
	public string staffAvatar
	{
		get
		{
			return this._staffAvatar;
		}
		set
		{
			if ((this._staffAvatar != value))
			{
				this._staffAvatar = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffMailAddr", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string staffMailAddr
	{
		get
		{
			return this._staffMailAddr;
		}
		set
		{
			if ((this._staffMailAddr != value))
			{
				this._staffMailAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string staffName
	{
		get
		{
			return this._staffName;
		}
		set
		{
			if ((this._staffName != value))
			{
				this._staffName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string staffID
	{
		get
		{
			return this._staffID;
		}
		set
		{
			if ((this._staffID != value))
			{
				this._staffID = value;
			}
		}
	}
}

public partial class getStudensByLikeResult
{
	
	private string _studentID;
	
	private string _studentName;
	
	private string _studentMailAddr;
	
	private string _studentAcademicYear;
	
	private string _studentAvatar;
	
	private System.Nullable<System.DateTime> _studentBirth;
	
	private string _studentAddr;
	
	private string _studentPhone;
	
	private string _studentSupervisorID;
	
	private string _studentSecondMarkerID;
	
	private System.Nullable<System.DateTime> _studentLastLogin;
	
	private int _studentStatus;
	
	public getStudensByLikeResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string studentID
	{
		get
		{
			return this._studentID;
		}
		set
		{
			if ((this._studentID != value))
			{
				this._studentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentName
	{
		get
		{
			return this._studentName;
		}
		set
		{
			if ((this._studentName != value))
			{
				this._studentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentMailAddr", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentMailAddr
	{
		get
		{
			return this._studentMailAddr;
		}
		set
		{
			if ((this._studentMailAddr != value))
			{
				this._studentMailAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAcademicYear", DbType="VarChar(10)")]
	public string studentAcademicYear
	{
		get
		{
			return this._studentAcademicYear;
		}
		set
		{
			if ((this._studentAcademicYear != value))
			{
				this._studentAcademicYear = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAvatar", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
	public string studentAvatar
	{
		get
		{
			return this._studentAvatar;
		}
		set
		{
			if ((this._studentAvatar != value))
			{
				this._studentAvatar = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentBirth", DbType="DateTime")]
	public System.Nullable<System.DateTime> studentBirth
	{
		get
		{
			return this._studentBirth;
		}
		set
		{
			if ((this._studentBirth != value))
			{
				this._studentBirth = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAddr", DbType="VarChar(250)")]
	public string studentAddr
	{
		get
		{
			return this._studentAddr;
		}
		set
		{
			if ((this._studentAddr != value))
			{
				this._studentAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentPhone", DbType="VarChar(20)")]
	public string studentPhone
	{
		get
		{
			return this._studentPhone;
		}
		set
		{
			if ((this._studentPhone != value))
			{
				this._studentPhone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSupervisorID", DbType="VarChar(20)")]
	public string studentSupervisorID
	{
		get
		{
			return this._studentSupervisorID;
		}
		set
		{
			if ((this._studentSupervisorID != value))
			{
				this._studentSupervisorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSecondMarkerID", DbType="VarChar(20)")]
	public string studentSecondMarkerID
	{
		get
		{
			return this._studentSecondMarkerID;
		}
		set
		{
			if ((this._studentSecondMarkerID != value))
			{
				this._studentSecondMarkerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentLastLogin", DbType="DateTime")]
	public System.Nullable<System.DateTime> studentLastLogin
	{
		get
		{
			return this._studentLastLogin;
		}
		set
		{
			if ((this._studentLastLogin != value))
			{
				this._studentLastLogin = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentStatus", DbType="Int NOT NULL")]
	public int studentStatus
	{
		get
		{
			return this._studentStatus;
		}
		set
		{
			if ((this._studentStatus != value))
			{
				this._studentStatus = value;
			}
		}
	}
}

public partial class getStudensByPKResult
{
	
	private string _studentID;
	
	private string _studentName;
	
	private string _studentMailAddr;
	
	private string _studentAcademicYear;
	
	private string _studentAvatar;
	
	private System.Nullable<System.DateTime> _studentBirth;
	
	private string _studentAddr;
	
	private string _studentPhone;
	
	private string _studentSupervisorID;
	
	private string _studentSecondMarkerID;
	
	private System.Nullable<System.DateTime> _studentLastLogin;
	
	private int _studentStatus;
	
	public getStudensByPKResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string studentID
	{
		get
		{
			return this._studentID;
		}
		set
		{
			if ((this._studentID != value))
			{
				this._studentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentName
	{
		get
		{
			return this._studentName;
		}
		set
		{
			if ((this._studentName != value))
			{
				this._studentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentMailAddr", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentMailAddr
	{
		get
		{
			return this._studentMailAddr;
		}
		set
		{
			if ((this._studentMailAddr != value))
			{
				this._studentMailAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAcademicYear", DbType="VarChar(10)")]
	public string studentAcademicYear
	{
		get
		{
			return this._studentAcademicYear;
		}
		set
		{
			if ((this._studentAcademicYear != value))
			{
				this._studentAcademicYear = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAvatar", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
	public string studentAvatar
	{
		get
		{
			return this._studentAvatar;
		}
		set
		{
			if ((this._studentAvatar != value))
			{
				this._studentAvatar = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentBirth", DbType="DateTime")]
	public System.Nullable<System.DateTime> studentBirth
	{
		get
		{
			return this._studentBirth;
		}
		set
		{
			if ((this._studentBirth != value))
			{
				this._studentBirth = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAddr", DbType="VarChar(250)")]
	public string studentAddr
	{
		get
		{
			return this._studentAddr;
		}
		set
		{
			if ((this._studentAddr != value))
			{
				this._studentAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentPhone", DbType="VarChar(20)")]
	public string studentPhone
	{
		get
		{
			return this._studentPhone;
		}
		set
		{
			if ((this._studentPhone != value))
			{
				this._studentPhone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSupervisorID", DbType="VarChar(20)")]
	public string studentSupervisorID
	{
		get
		{
			return this._studentSupervisorID;
		}
		set
		{
			if ((this._studentSupervisorID != value))
			{
				this._studentSupervisorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSecondMarkerID", DbType="VarChar(20)")]
	public string studentSecondMarkerID
	{
		get
		{
			return this._studentSecondMarkerID;
		}
		set
		{
			if ((this._studentSecondMarkerID != value))
			{
				this._studentSecondMarkerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentLastLogin", DbType="DateTime")]
	public System.Nullable<System.DateTime> studentLastLogin
	{
		get
		{
			return this._studentLastLogin;
		}
		set
		{
			if ((this._studentLastLogin != value))
			{
				this._studentLastLogin = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentStatus", DbType="Int NOT NULL")]
	public int studentStatus
	{
		get
		{
			return this._studentStatus;
		}
		set
		{
			if ((this._studentStatus != value))
			{
				this._studentStatus = value;
			}
		}
	}
}

public partial class getStudensByStaffResult
{
	
	private string _studentID;
	
	private string _studentName;
	
	private string _studentMailAddr;
	
	private string _studentAcademicYear;
	
	private string _studentAvatar;
	
	private System.Nullable<System.DateTime> _studentBirth;
	
	private string _studentAddr;
	
	private string _studentPhone;
	
	private string _studentSupervisorID;
	
	private string _studentSecondMarkerID;
	
	private System.Nullable<System.DateTime> _studentLastLogin;
	
	private int _studentStatus;
	
	public getStudensByStaffResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string studentID
	{
		get
		{
			return this._studentID;
		}
		set
		{
			if ((this._studentID != value))
			{
				this._studentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentName
	{
		get
		{
			return this._studentName;
		}
		set
		{
			if ((this._studentName != value))
			{
				this._studentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentMailAddr", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentMailAddr
	{
		get
		{
			return this._studentMailAddr;
		}
		set
		{
			if ((this._studentMailAddr != value))
			{
				this._studentMailAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAcademicYear", DbType="VarChar(10)")]
	public string studentAcademicYear
	{
		get
		{
			return this._studentAcademicYear;
		}
		set
		{
			if ((this._studentAcademicYear != value))
			{
				this._studentAcademicYear = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAvatar", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
	public string studentAvatar
	{
		get
		{
			return this._studentAvatar;
		}
		set
		{
			if ((this._studentAvatar != value))
			{
				this._studentAvatar = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentBirth", DbType="DateTime")]
	public System.Nullable<System.DateTime> studentBirth
	{
		get
		{
			return this._studentBirth;
		}
		set
		{
			if ((this._studentBirth != value))
			{
				this._studentBirth = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAddr", DbType="VarChar(250)")]
	public string studentAddr
	{
		get
		{
			return this._studentAddr;
		}
		set
		{
			if ((this._studentAddr != value))
			{
				this._studentAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentPhone", DbType="VarChar(20)")]
	public string studentPhone
	{
		get
		{
			return this._studentPhone;
		}
		set
		{
			if ((this._studentPhone != value))
			{
				this._studentPhone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSupervisorID", DbType="VarChar(20)")]
	public string studentSupervisorID
	{
		get
		{
			return this._studentSupervisorID;
		}
		set
		{
			if ((this._studentSupervisorID != value))
			{
				this._studentSupervisorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSecondMarkerID", DbType="VarChar(20)")]
	public string studentSecondMarkerID
	{
		get
		{
			return this._studentSecondMarkerID;
		}
		set
		{
			if ((this._studentSecondMarkerID != value))
			{
				this._studentSecondMarkerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentLastLogin", DbType="DateTime")]
	public System.Nullable<System.DateTime> studentLastLogin
	{
		get
		{
			return this._studentLastLogin;
		}
		set
		{
			if ((this._studentLastLogin != value))
			{
				this._studentLastLogin = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentStatus", DbType="Int NOT NULL")]
	public int studentStatus
	{
		get
		{
			return this._studentStatus;
		}
		set
		{
			if ((this._studentStatus != value))
			{
				this._studentStatus = value;
			}
		}
	}
}

public partial class getStudensByStatusResult
{
	
	private string _studentID;
	
	private string _studentName;
	
	private string _studentMailAddr;
	
	private string _studentAcademicYear;
	
	private string _studentAvatar;
	
	private System.Nullable<System.DateTime> _studentBirth;
	
	private string _studentAddr;
	
	private string _studentPhone;
	
	private string _studentSupervisorID;
	
	private string _studentSecondMarkerID;
	
	private System.Nullable<System.DateTime> _studentLastLogin;
	
	private int _studentStatus;
	
	public getStudensByStatusResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string studentID
	{
		get
		{
			return this._studentID;
		}
		set
		{
			if ((this._studentID != value))
			{
				this._studentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentName
	{
		get
		{
			return this._studentName;
		}
		set
		{
			if ((this._studentName != value))
			{
				this._studentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentMailAddr", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentMailAddr
	{
		get
		{
			return this._studentMailAddr;
		}
		set
		{
			if ((this._studentMailAddr != value))
			{
				this._studentMailAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAcademicYear", DbType="VarChar(10)")]
	public string studentAcademicYear
	{
		get
		{
			return this._studentAcademicYear;
		}
		set
		{
			if ((this._studentAcademicYear != value))
			{
				this._studentAcademicYear = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAvatar", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
	public string studentAvatar
	{
		get
		{
			return this._studentAvatar;
		}
		set
		{
			if ((this._studentAvatar != value))
			{
				this._studentAvatar = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentBirth", DbType="DateTime")]
	public System.Nullable<System.DateTime> studentBirth
	{
		get
		{
			return this._studentBirth;
		}
		set
		{
			if ((this._studentBirth != value))
			{
				this._studentBirth = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentAddr", DbType="VarChar(250)")]
	public string studentAddr
	{
		get
		{
			return this._studentAddr;
		}
		set
		{
			if ((this._studentAddr != value))
			{
				this._studentAddr = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentPhone", DbType="VarChar(20)")]
	public string studentPhone
	{
		get
		{
			return this._studentPhone;
		}
		set
		{
			if ((this._studentPhone != value))
			{
				this._studentPhone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSupervisorID", DbType="VarChar(20)")]
	public string studentSupervisorID
	{
		get
		{
			return this._studentSupervisorID;
		}
		set
		{
			if ((this._studentSupervisorID != value))
			{
				this._studentSupervisorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSecondMarkerID", DbType="VarChar(20)")]
	public string studentSecondMarkerID
	{
		get
		{
			return this._studentSecondMarkerID;
		}
		set
		{
			if ((this._studentSecondMarkerID != value))
			{
				this._studentSecondMarkerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentLastLogin", DbType="DateTime")]
	public System.Nullable<System.DateTime> studentLastLogin
	{
		get
		{
			return this._studentLastLogin;
		}
		set
		{
			if ((this._studentLastLogin != value))
			{
				this._studentLastLogin = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentStatus", DbType="Int NOT NULL")]
	public int studentStatus
	{
		get
		{
			return this._studentStatus;
		}
		set
		{
			if ((this._studentStatus != value))
			{
				this._studentStatus = value;
			}
		}
	}
}

public partial class getStudentNameByIDResult
{
	
	private string _studentName;
	
	public getStudentNameByIDResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string studentName
	{
		get
		{
			return this._studentName;
		}
		set
		{
			if ((this._studentName != value))
			{
				this._studentName = value;
			}
		}
	}
}

public partial class getStudentsUploadsResult
{
	
	private string _studentID;
	
	private string _studentName;
	
	private int _documentID;
	
	private string _documentTitle;
	
	private System.DateTime _documentDate;
	
	private string _documentLink;
	
	public getStudentsUploadsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentID", DbType="VarChar(20)")]
	public string studentID
	{
		get
		{
			return this._studentID;
		}
		set
		{
			if ((this._studentID != value))
			{
				this._studentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentName", DbType="VarChar(150)")]
	public string studentName
	{
		get
		{
			return this._studentName;
		}
		set
		{
			if ((this._studentName != value))
			{
				this._studentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentID", DbType="Int NOT NULL")]
	public int documentID
	{
		get
		{
			return this._documentID;
		}
		set
		{
			if ((this._documentID != value))
			{
				this._documentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentTitle", DbType="VarChar(100)")]
	public string documentTitle
	{
		get
		{
			return this._documentTitle;
		}
		set
		{
			if ((this._documentTitle != value))
			{
				this._documentTitle = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentDate", DbType="DateTime NOT NULL")]
	public System.DateTime documentDate
	{
		get
		{
			return this._documentDate;
		}
		set
		{
			if ((this._documentDate != value))
			{
				this._documentDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentLink", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string documentLink
	{
		get
		{
			return this._documentLink;
		}
		set
		{
			if ((this._documentLink != value))
			{
				this._documentLink = value;
			}
		}
	}
}

public partial class getTop5ActiveStaffsResult
{
	
	private string _staffID;
	
	private string _staffName;
	
	private System.Nullable<int> _MessCount;
	
	public getTop5ActiveStaffsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string staffID
	{
		get
		{
			return this._staffID;
		}
		set
		{
			if ((this._staffID != value))
			{
				this._staffID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffName", DbType="VarChar(150)")]
	public string staffName
	{
		get
		{
			return this._staffName;
		}
		set
		{
			if ((this._staffName != value))
			{
				this._staffName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessCount", DbType="Int")]
	public System.Nullable<int> MessCount
	{
		get
		{
			return this._MessCount;
		}
		set
		{
			if ((this._MessCount != value))
			{
				this._MessCount = value;
			}
		}
	}
}

public partial class getTotalBlogPostResult
{
	
	private System.Nullable<int> _Column1;
	
	public getTotalBlogPostResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
	public System.Nullable<int> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class getTotalMadeAllocationsResult
{
	
	private System.Nullable<int> _Column1;
	
	public getTotalMadeAllocationsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
	public System.Nullable<int> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class getUserUploadsResult
{
	
	private int _documentID;
	
	private string _documentTitle;
	
	private System.DateTime _documentDate;
	
	private string _documentLink;
	
	private string _studentName;
	
	private string _staffName;
	
	public getUserUploadsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentID", DbType="Int NOT NULL")]
	public int documentID
	{
		get
		{
			return this._documentID;
		}
		set
		{
			if ((this._documentID != value))
			{
				this._documentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentTitle", DbType="VarChar(100)")]
	public string documentTitle
	{
		get
		{
			return this._documentTitle;
		}
		set
		{
			if ((this._documentTitle != value))
			{
				this._documentTitle = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentDate", DbType="DateTime NOT NULL")]
	public System.DateTime documentDate
	{
		get
		{
			return this._documentDate;
		}
		set
		{
			if ((this._documentDate != value))
			{
				this._documentDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentLink", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string documentLink
	{
		get
		{
			return this._documentLink;
		}
		set
		{
			if ((this._documentLink != value))
			{
				this._documentLink = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentName", DbType="VarChar(150)")]
	public string studentName
	{
		get
		{
			return this._studentName;
		}
		set
		{
			if ((this._studentName != value))
			{
				this._studentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffName", DbType="VarChar(150)")]
	public string staffName
	{
		get
		{
			return this._staffName;
		}
		set
		{
			if ((this._staffName != value))
			{
				this._staffName = value;
			}
		}
	}
}

public partial class reportTotalAllocationsResult
{
	
	private System.Nullable<int> _Column1;
	
	public reportTotalAllocationsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
	public System.Nullable<int> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class reportTotalInactiveStudentsResult
{
	
	private System.Nullable<int> _Column1;
	
	public reportTotalInactiveStudentsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
	public System.Nullable<int> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class reportTotalNotAllocatedResult
{
	
	private System.Nullable<int> _Column1;
	
	public reportTotalNotAllocatedResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
	public System.Nullable<int> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class reportTotalUserResult
{
	
	private System.Nullable<int> _Column1;
	
	public reportTotalUserResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
	public System.Nullable<int> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class getStaffsUploadsResult
{
	
	private string _staffID;
	
	private string _staffName;
	
	private System.Nullable<int> _documentID;
	
	private string _documentTitle;
	
	private System.Nullable<System.DateTime> _documentDate;
	
	private string _documentLink;
	
	public getStaffsUploadsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffID", DbType="VarChar(20)")]
	public string staffID
	{
		get
		{
			return this._staffID;
		}
		set
		{
			if ((this._staffID != value))
			{
				this._staffID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffName", DbType="VarChar(150)")]
	public string staffName
	{
		get
		{
			return this._staffName;
		}
		set
		{
			if ((this._staffName != value))
			{
				this._staffName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentID", DbType="Int")]
	public System.Nullable<int> documentID
	{
		get
		{
			return this._documentID;
		}
		set
		{
			if ((this._documentID != value))
			{
				this._documentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentTitle", DbType="VarChar(100)")]
	public string documentTitle
	{
		get
		{
			return this._documentTitle;
		}
		set
		{
			if ((this._documentTitle != value))
			{
				this._documentTitle = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> documentDate
	{
		get
		{
			return this._documentDate;
		}
		set
		{
			if ((this._documentDate != value))
			{
				this._documentDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentLink", DbType="VarChar(150)")]
	public string documentLink
	{
		get
		{
			return this._documentLink;
		}
		set
		{
			if ((this._documentLink != value))
			{
				this._documentLink = value;
			}
		}
	}
}
#pragma warning restore 1591
